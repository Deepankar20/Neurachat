generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql", "sqlite", etc.
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) // Unique identifier for the user
  email     String   @unique // User email
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  apps      App[]
}

model App {
  id        String    @id @default(cuid()) // Unique identifier for the app
  name      String // Name of the app
  context   String // Context of the app for AI to use
  apiKey    String    @unique // API key for authentication
  userId    String // Foreign key to the user
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  ApiKey    ApiKey[]
}

model Message {
  id        String   @id @default(cuid()) // Unique identifier for the message
  appId     String // Foreign key to the app
  app       App      @relation(fields: [appId], references: [id])
  text      String // Message text sent by the user
  response  String // Response generated by Gemini
  createdAt DateTime @default(now())
}

model ApiKey {
  id        String   @id @default(cuid()) // Unique identifier for the API key
  key       String   @unique // The API key itself
  appId     String // Foreign key to the app
  app       App      @relation(fields: [appId], references: [id])
  createdAt DateTime @default(now())
}
